{{- $existingImageCredentials := .Values.imageCredentials.existingImageCredentials -}}
{{- $imageCredentials := .Values.imageCredentials.name -}}
{{- $apiProfile := .Values.testconductor.environment.od.api -}}
{{- $uiProfile := .Values.testconductor.environment.od.ui -}}
{{- $pollerProfile := .Values.testconductor.environment.od.poller -}}
{{- $notificationProfile := .Values.testconductor.environment.od.notification -}}
{{- $singleProfile := .Values.testconductor.environment.od.single -}}
{{- $isOnPremise := .Values.testconductor.environment.isOnPremise -}}
{{- $iSingleInstance := .Values.testconductor.environment.singleInstance -}}
{{- if .Values.testconductor.environment.isOnPremise }}
{{- $apiProfile = .Values.testconductor.environment.op.api -}}
{{- $uiProfile = .Values.testconductor.environment.op.ui -}}
{{- $pollerProfile = .Values.testconductor.environment.op.poller -}}
{{- $notificationProfile = .Values.testconductor.environment.op.notification -}}
{{- $singleProfile = .Values.testconductor.environment.op.single -}}
{{- end }}
{{- $affinityUi := deepCopy (default (dict) .Values.affinity) | merge (.Values.deployment.singlePodPerNode | ternary (include "qtest-mgr.podAntiAffinity" "qtest-mgr" | fromYaml) (dict)) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mgr-ui-deployment
  namespace: {{ .Values.namespace.name }}
  {{- with (default .Values.deployment.annotations .Values.annotations) }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    app: qtest-mgr
    role: ui
    release: {{ .Release.Name }}
    {{- include "qtest-mgr.labels" . | nindent 4 }}
{{- range $key, $value := .Values.extraLabels }}
    {{ $key }}: {{ $value }}
{{- end }}
spec:
  {{- if .Values.rollouts.enabled }}
  replicas: 0
  {{- else }}
  replicas: {{ .Values.autoscaling.minReplicas.ui }}
  {{- end }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: qtest-mgr
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      labels:
        app: qtest-mgr
        role: ui
        release: "{{ .Release.Name }}"
        {{- include "qtest-mgr.labels" . | nindent 8 }}
{{- range $key, $value := .Values.extraLabels }}
        {{ $key }}: {{ $value }}
{{- end }}
        {{- if .Values.podLabels}}
        {{ toYaml .Values.podLabels | nindent 8 }}
        {{- end}}
    spec:
    {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $affinityUi }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{ if .Values.imageCredentials.enabled }}
      {{ if .Values.imageCredentials.existingImageCredentials }}
      imagePullSecrets:
        - name: {{ $existingImageCredentials }}
      {{ else }}
      imagePullSecrets:
        - name: {{ $imageCredentials }}
      {{- end }}
    {{- end }}
      serviceAccountName: {{ template "qtest-mgr.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountsatoken }}
      shareProcessNamespace: {{ .Values.shareProcessNamespace }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.extraInitContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      initContainers:
      {{- if eq "string" (printf "%T" .Values.extraInitContainers) }}
{{ tpl .Values.extraInitContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.extraInitContainers | indent 6 }}
      {{- end }}
      {{- end }}
      {{- if .Values.qTestManager.securityContext }}
      securityContext: {{- toYaml .Values.qTestManager.securityContext | nindent 8 }}
      {{- end }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
{{- if .Values.extraArgs }}
        args:
{{- with .Values.extraArgs }}
{{ toYaml . | indent 10 }}
{{- end }}
{{- end }}
        livenessProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.livenessSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.livenessProbe | toYaml | indent 10 | trim }}
        {{- end }}
        readinessProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.readinessSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.readinessProbe | toYaml | indent 10 | trim }}
        {{- end }}
        startupProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.startupSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.startupProbe | toYaml | indent 10 | trim }}
        {{- end }}
        resources:
          {{- .Values.ui.resources | default .Values.resources | toYaml | nindent 10 }}
        {{- with .Values.lifecycle }}
        lifecycle:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
        - containerPort: {{ .Values.service.targetHttpsPort }}
          name: https
          protocol: TCP
        {{- else }}
        - containerPort: {{ .Values.service.targetPort }}
          name: http
          protocol: TCP
        {{- end }}
        envFrom:
        {{- toYaml .Values.envFrom.ui | nindent 8 }}
        env:
        - name: testconductor.environment
        {{- if $iSingleInstance }}
          value: {{ $singleProfile }}
        {{ else }}
          value: {{ $uiProfile }}
        {{- end }}
        - name: AES_SECRET_KEYS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.aesSecretKeysName }}
              key: AESsecretKeys
        {{- with .Values.secrets.oauthAppEnv }}
        {{- range . }}
        - name: {{ .name }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.secrets.oauthAppsSecretName | required "secrets.oauthAppsSecretName is required" }}
              key: {{ .key }}
        {{- end }}
        {{- end }}
        {{- if .Values.qTestManager.logging.overrideEnabled }}
        - name: logback.configurationFile.additional
          value: "{{ .Values.qTestManager.logging.configMountPath }}/{{ .Values.qTestManager.logging.configFile }}"
        {{- end }}
{{- with .Values.extraEnv }}
{{ toYaml . | indent 8 }}
{{- end }}
        volumeMounts:
        {{- if .Values.qTestManager.logging.overrideEnabled }}
        - name: qtest-manager-logging-configuration-volume
          mountPath: {{ .Values.qTestManager.logging.configMountPath }}
        {{- end }}
        - name: qtest-data
          mountPath: {{ .Values.qTestManager.data.volumeMount }}
        - name: qtest-manager-secret-storage
          mountPath: {{ .Values.qTestManager.secret.volumeMount }}
          readOnly: true
        {{- if .Values.qTestManager.client.jdbc.sslEnable }}
        - name: qtest-manager-secret-root-volume
          mountPath: {{ .Values.qTestManager.client.jdbc.sslMountPath }}
          readOnly: true
        {{- end }}
        {{- if .Values.qTestManager.l2c.enabled }}
        - name: qtest-manager-secret-l2c-volume
          mountPath: {{ .Values.qTestManager.l2c.mountPath }}
          readOnly: true
        {{- end }}
        {{- if .Values.qTestManager.serverAppSSLRequired }}
        - name: qtest-manager-secret-ssl-volume
          mountPath: {{ .Values.qTestManager.server.sslMountPath }}
          readOnly: true
        {{- end }}
{{- with .Values.extraVolumeMounts }}
{{ toYaml . | indent 8 }}
{{- end }}
      {{- if .Values.extraContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      {{- if eq "string" (printf "%T" .Values.extraContainers) }}
{{ tpl .Values.extraContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.extraContainers | indent 6 }}
      {{- end }}
      {{- end }}
      volumes:
      - name: qtest-manager-secret-storage
        secret:
      {{ if .Values.secrets.existingConfigs }}
          secretName: {{ .Values.secrets.existingConfigs }}
      {{ else }}
          secretName: qtest-manager-secret
      {{- end }}
      {{- if .Values.qTestManager.client.jdbc.sslEnable }}
      - name: qtest-manager-secret-root-volume
        secret:
          secretName: qtest-db-root-secret
      {{- end }}
      {{- if .Values.qTestManager.l2c.enabled }}
      - name: qtest-manager-secret-l2c-volume
        secret:
          secretName: qtest-l2c-secret
      {{- end }}
      {{- if .Values.qTestManager.serverAppSSLRequired }}
      - name: qtest-manager-secret-ssl-volume
        secret:
          secretName: qtest-ssl-root-secret
      {{- end }}
      {{- if .Values.qTestManager.logging.overrideEnabled }}
      - name: qtest-manager-logging-configuration-volume
        configMap:
          name: qtest-manager-logging-config
      {{- end }}
      - name: qtest-data
      {{- if .Values.persistence.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
      {{- else if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "qtest-mgr.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- with .Values.extraVolumes }}
{{ toYaml . | indent 6 }}
{{- end }}
---
{{ if not $iSingleInstance }}
{{- $affinityPoller := deepCopy (default (dict) .Values.affinity) | merge (.Values.deployment.singlePodPerNode | ternary (include "qtest-mgr.podAntiAffinity" "qtest-mgr-poller" | fromYaml) (dict)) -}}
{{- $affinityNotification := deepCopy (default (dict) .Values.affinity) | merge (.Values.deployment.singlePodPerNode | ternary (include "qtest-mgr.podAntiAffinity" "qtest-mgr-notification" | fromYaml) (dict)) -}}
{{- $affinityApi := deepCopy (default (dict) .Values.affinity) | merge (.Values.deployment.singlePodPerNode | ternary (include "qtest-mgr.podAntiAffinity" "qtest-mgr-api" | fromYaml) (dict)) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mgr-poller-deployment
  namespace: {{ .Values.namespace.name }}
  {{- with (default .Values.deployment.annotations .Values.annotations) }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    app: qtest-mgr-poller
    role: poller
    release: {{ .Release.Name }}
    {{- include "qtest-mgr.labels" . | nindent 4 }}
{{- range $key, $value := .Values.extraLabels }}
    {{ $key }}: {{ $value }}
{{- end }}
spec:
  replicas: {{ .Values.autoscaling.minReplicas.poller }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: qtest-mgr-poller
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      labels:
        app: qtest-mgr-poller
        role: poller
        release: "{{ .Release.Name }}"
        {{- include "qtest-mgr.labels" . | nindent 8 }}
{{- range $key, $value := .Values.extraLabels }}
        {{ $key }}: {{ $value }}
{{- end }}
        {{- if .Values.podLabels}}
        {{ toYaml .Values.podLabels | nindent 8 }}
        {{- end}}
    spec:
    {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $affinityPoller }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{ if .Values.imageCredentials.enabled }}
      {{ if .Values.imageCredentials.existingImageCredentials }}
      imagePullSecrets:
        - name: {{ $existingImageCredentials }}
      {{ else }}
      imagePullSecrets:
        - name: {{ $imageCredentials }}
      {{- end }}
    {{- end }}
      serviceAccountName: {{ template "qtest-mgr.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountsatoken }}
      shareProcessNamespace: {{ .Values.shareProcessNamespace }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.extraInitContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      initContainers:
      {{- if eq "string" (printf "%T" .Values.extraInitContainers) }}
{{ tpl .Values.extraInitContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.extraInitContainers | indent 6 }}
      {{- end }}
      {{- end }}
      {{- if .Values.qTestManager.securityContext }}
      securityContext: {{- toYaml .Values.qTestManager.securityContext | nindent 8 }}
      {{- end }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
{{- if .Values.extraArgs }}
        args:
{{- with .Values.extraArgs }}
{{ toYaml . | indent 10 }}
{{- end }}
{{- end }}
        livenessProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.livenessSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.livenessProbe | toYaml | indent 10 | trim }}
        {{- end }}
        readinessProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.readinessSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.readinessProbe | toYaml | indent 10 | trim }}
        {{- end }}
        startupProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.startupSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.startupProbe | toYaml | indent 10 | trim }}
        {{- end }}
        resources:
          {{- .Values.poller.resources | default .Values.resources | toYaml | nindent 10 }}
        {{- with .Values.lifecycle }}
        lifecycle:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
        - containerPort: {{ .Values.service.targetHttpsPort }}
          name: https
          protocol: TCP
        {{- else }}
        - containerPort: {{ .Values.service.targetPort }}
          name: http
          protocol: TCP
        {{- end }}
        envFrom:
        {{- toYaml .Values.envFrom.poller | nindent 8 }}
        env:
        - name: testconductor.environment
          value: {{ $pollerProfile }}
{{- with .Values.extraEnv }}
{{ toYaml . | indent 8 }}
{{- end }}
        - name: AES_SECRET_KEYS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.aesSecretKeysName }}
              key: AESsecretKeys
        {{- with .Values.secrets.oauthAppEnv }}
        {{- range . }}
        - name: {{ .name }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.secrets.oauthAppsSecretName | required "secrets.oauthAppsSecretName is required" }}
              key: {{ .key }}
        {{- end }}
        {{- end }}
        {{- if .Values.qTestManager.logging.overrideEnabled }}
        - name: logback.configurationFile.additional
          value: "{{ .Values.qTestManager.logging.configMountPath }}/{{ .Values.qTestManager.logging.configFile }}"
        {{- end }}
        volumeMounts:
        {{- if .Values.qTestManager.logging.overrideEnabled }}
        - name: qtest-manager-logging-configuration-volume
          mountPath: {{ .Values.qTestManager.logging.configMountPath }}
        {{- end }}
        - name: qtest-data
          mountPath: {{ .Values.qTestManager.data.volumeMount }}
        - name: qtest-manager-secret-storage
          mountPath: {{ .Values.qTestManager.secret.volumeMount }}
          readOnly: true
         {{- if .Values.qTestManager.client.jdbc.sslEnable }}
        - name: qtest-manager-secret-root-volume
          mountPath: {{ .Values.qTestManager.client.jdbc.sslMountPath }}
          readOnly: true
        {{- end }}
        {{- if .Values.qTestManager.l2c.enabled }}
        - name: qtest-manager-secret-l2c-volume
          mountPath: {{ .Values.qTestManager.l2c.mountPath }}
          readOnly: true
        {{- end }}
        {{- if .Values.qTestManager.serverAppSSLRequired }}
        - name: qtest-manager-secret-ssl-volume
          mountPath: {{ .Values.qTestManager.server.sslMountPath }}
          readOnly: true
        {{- end }}
{{- with .Values.extraVolumeMounts }}
{{ toYaml . | indent 8 }}
{{- end }}
      {{- if .Values.extraContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      {{- if eq "string" (printf "%T" .Values.extraContainers) }}
{{ tpl .Values.extraContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.extraContainers | indent 6 }}
      {{- end }}
      {{- end }}
      volumes:
      - name: qtest-manager-secret-storage
        secret:
      {{ if .Values.secrets.existingConfigs }}
          secretName: {{ .Values.secrets.existingConfigs }}
      {{ else }}
          secretName: qtest-manager-secret
      {{- end }}
      {{- if .Values.qTestManager.client.jdbc.sslEnable }}
      - name: qtest-manager-secret-root-volume
        secret:
          secretName: qtest-db-root-secret
      {{- end }}
      {{- if .Values.qTestManager.l2c.enabled }}
      - name: qtest-manager-secret-l2c-volume
        secret:
          secretName: qtest-l2c-secret
      {{- end }}
      {{- if .Values.qTestManager.serverAppSSLRequired }}
      - name: qtest-manager-secret-ssl-volume
        secret:
          secretName: qtest-ssl-root-secret
      {{- end }}
      {{- if .Values.qTestManager.logging.overrideEnabled }}
      - name: qtest-manager-logging-configuration-volume
        configMap:
          name: qtest-manager-logging-config
      {{- end }}
      - name: qtest-data
      {{- if .Values.persistence.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
      {{- else if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "qtest-mgr.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- with .Values.extraVolumes }}
{{ toYaml . | indent 6 }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mgr-notification-deployment
  namespace: {{ .Values.namespace.name }}
  {{- with (default .Values.deployment.annotations .Values.annotations) }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    app: qtest-mgr-notification
    role: notification
    release: {{ .Release.Name }}
    {{- include "qtest-mgr.labels" . | nindent 4 }}
{{- range $key, $value := .Values.extraLabels }}
    {{ $key }}: {{ $value }}
{{- end }}
spec:
  {{- if .Values.rollouts.enabled }}
  replicas: 0
  {{- else }}
  replicas: {{ .Values.autoscaling.minReplicas.notification }}
  {{- end }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: qtest-mgr-notification
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      labels:
        app: qtest-mgr-notification
        role: notification
        release: "{{ .Release.Name }}"
        {{- include "qtest-mgr.labels" . | nindent 8 }}
{{- range $key, $value := .Values.extraLabels }}
        {{ $key }}: {{ $value }}
{{- end }}
        {{- if .Values.podLabels}}
        {{ toYaml .Values.podLabels | nindent 8 }}
        {{- end}}
    spec:
    {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $affinityNotification }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{ if .Values.imageCredentials.enabled }}
      {{ if .Values.imageCredentials.existingImageCredentials }}
      imagePullSecrets:
        - name: {{ $existingImageCredentials }}
      {{ else }}
      imagePullSecrets:
        - name: {{ $imageCredentials }}
      {{- end }}
    {{- end }}
      serviceAccountName: {{ template "qtest-mgr.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountsatoken }}
      shareProcessNamespace: {{ .Values.shareProcessNamespace }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.extraInitContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      initContainers:
      {{- if eq "string" (printf "%T" .Values.extraInitContainers) }}
{{ tpl .Values.extraInitContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.extraInitContainers | indent 6 }}
      {{- end }}
      {{- end }}
      {{- if .Values.qTestManager.securityContext }}
      securityContext: {{- toYaml .Values.qTestManager.securityContext | nindent 8 }}
      {{- end }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
{{- if .Values.extraArgs }}
        args:
{{- with .Values.extraArgs }}
{{ toYaml . | indent 10 }}
{{- end }}
{{- end }}
        livenessProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.livenessSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.livenessProbe | toYaml | indent 10 | trim }}
        {{- end }}
        readinessProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.readinessSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.readinessProbe | toYaml | indent 10 | trim }}
        {{- end }}
        startupProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.startupSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.startupProbe | toYaml | indent 10 | trim }}
        {{- end }}
        resources:
          {{- .Values.notification.resources | default .Values.resources | toYaml | nindent 10 }}
        {{- with .Values.lifecycle }}
        lifecycle:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
        - containerPort: {{ .Values.service.targetHttpsPort }}
          name: https
          protocol: TCP
        {{- else }}
        - containerPort: {{ .Values.service.targetPort }}
          name: http
          protocol: TCP
        {{- end }}
        envFrom:
        {{- toYaml .Values.envFrom.notification | nindent 8 }}
        env:
        - name: testconductor.environment
          value: {{ $notificationProfile }}
{{- with .Values.extraEnv }}
{{ toYaml . | indent 8 }}
{{- end }}
        - name: AES_SECRET_KEYS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.aesSecretKeysName }}
              key: AESsecretKeys
        {{- with .Values.secrets.oauthAppEnv }}
        {{- range . }}
        - name: {{ .name }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.secrets.oauthAppsSecretName | required "secrets.oauthAppsSecretName is required" }}
              key: {{ .key }}
        {{- end }}
        {{- end }}
        {{- if .Values.qTestManager.logging.overrideEnabled }}
        - name: logback.configurationFile.additional
          value: "{{ .Values.qTestManager.logging.configMountPath }}/{{ .Values.qTestManager.logging.configFile }}"
        {{- end }}
        volumeMounts:
        {{- if .Values.qTestManager.logging.overrideEnabled }}
        - name: qtest-manager-logging-configuration-volume
          mountPath: {{ .Values.qTestManager.logging.configMountPath }}
        {{- end }}
        - name: qtest-data
          mountPath: {{ .Values.qTestManager.data.volumeMount }}
        - name: qtest-manager-secret-storage
          mountPath: {{ .Values.qTestManager.secret.volumeMount }}
          readOnly: true
        {{- if .Values.qTestManager.client.jdbc.sslEnable }}
        - name: qtest-manager-secret-root-volume
          mountPath: {{ .Values.qTestManager.client.jdbc.sslMountPath }}
          readOnly: true
        {{- end }}
        {{- if .Values.qTestManager.l2c.enabled }}
        - name: qtest-manager-secret-l2c-volume
          mountPath: {{ .Values.qTestManager.l2c.mountPath }}
          readOnly: true
        {{- end }}
        {{- if .Values.qTestManager.serverAppSSLRequired }}
        - name: qtest-manager-secret-ssl-volume
          mountPath: {{ .Values.qTestManager.server.sslMountPath }}
          readOnly: true
        {{- end }}
{{- with .Values.extraVolumeMounts }}
{{ toYaml . | indent 8 }}
{{- end }}
      {{- if .Values.extraContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      {{- if eq "string" (printf "%T" .Values.extraContainers) }}
{{ tpl .Values.extraContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.extraContainers | indent 6 }}
      {{- end }}
      {{- end }}
      volumes:
      - name: qtest-manager-secret-storage
        secret:
      {{ if .Values.secrets.existingConfigs }}
          secretName: {{ .Values.secrets.existingConfigs }}
      {{ else }}
          secretName: qtest-manager-secret
      {{- end }}
      {{- if .Values.qTestManager.client.jdbc.sslEnable }}
      - name: qtest-manager-secret-root-volume
        secret:
          secretName: qtest-db-root-secret
      {{- end }}
      {{- if .Values.qTestManager.l2c.enabled }}
      - name: qtest-manager-secret-l2c-volume
        secret:
          secretName: qtest-l2c-secret
      {{- end }}
      {{- if .Values.qTestManager.serverAppSSLRequired }}
      - name: qtest-manager-secret-ssl-volume
        secret:
          secretName: qtest-ssl-root-secret
      {{- end }}
      {{- if .Values.qTestManager.logging.overrideEnabled }}
      - name: qtest-manager-logging-configuration-volume
        configMap:
          name: qtest-manager-logging-config
      {{- end }}
      - name: qtest-data
      {{- if .Values.persistence.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
      {{- else if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "qtest-mgr.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- with .Values.extraVolumes }}
{{ toYaml . | indent 6 }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mgr-api-deployment
  namespace: {{ .Values.namespace.name }}
  {{- with (default .Values.deployment.annotations .Values.annotations) }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    app: qtest-mgr-api
    role: api
    release: {{ .Release.Name }}
    {{- include "qtest-mgr.labels" . | nindent 4 }}
{{- range $key, $value := .Values.extraLabels }}
    {{ $key }}: {{ $value }}
{{- end }}
spec:
  {{- if .Values.rollouts.enabled }}
  replicas: 0
  {{- else }}
  replicas: {{ .Values.autoscaling.minReplicas.api }}
  {{- end }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: qtest-mgr-api
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      labels:
        app: qtest-mgr-api
        role: api
        release: "{{ .Release.Name }}"
        {{- include "qtest-mgr.labels" . | nindent 8 }}
{{- range $key, $value := .Values.extraLabels }}
        {{ $key }}: {{ $value }}
{{- end }}
        {{- if .Values.podLabels}}
        {{ toYaml .Values.podLabels | nindent 8 }}
        {{- end}}
    spec:
    {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $affinityApi }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{ if .Values.imageCredentials.enabled }}
      {{ if .Values.imageCredentials.existingImageCredentials }}
      imagePullSecrets:
        - name: {{ $existingImageCredentials }}
      {{ else }}
      imagePullSecrets:
        - name: {{ $imageCredentials }}
      {{- end }}
    {{- end }}
      serviceAccountName: {{ template "qtest-mgr.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountsatoken }}
      shareProcessNamespace: {{ .Values.shareProcessNamespace }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.extraInitContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      initContainers:
      {{- if eq "string" (printf "%T" .Values.extraInitContainers) }}
{{ tpl .Values.extraInitContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.extraInitContainers | indent 6 }}
      {{- end }}
      {{- end }}
      {{- if .Values.qTestManager.securityContext }}
      securityContext: {{- toYaml .Values.qTestManager.securityContext | nindent 8 }}
      {{- end }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
{{- if .Values.extraArgs }}
        args:
{{- with .Values.extraArgs }}
{{ toYaml . | indent 10 }}
{{- end }}
{{- end }}
        livenessProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.livenessSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.livenessProbe | toYaml | indent 10 | trim }}
        {{- end }}
        readinessProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.readinessSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.readinessProbe | toYaml | indent 10 | trim }}
        {{- end }}
        startupProbe:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
          {{ .Values.startupSslProbe | toYaml | indent 10 | trim }}
        {{- else }}
          {{ .Values.startupProbe | toYaml | indent 10 | trim }}
        {{- end }}
        resources:
          {{- .Values.api.resources | default .Values.resources | toYaml | nindent 10 }}
        {{- with .Values.lifecycle }}
        lifecycle:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        {{- if .Values.qTestManager.serverAppSSLRequired }}
        - containerPort: {{ .Values.service.targetHttpsPort }}
          name: https
          protocol: TCP
        {{- else }}
        - containerPort: {{ .Values.service.targetPort }}
          name: http
          protocol: TCP
        {{- end }}
        envFrom:
        {{- toYaml .Values.envFrom.api | nindent 8 }}
        env:
        - name: testconductor.environment
          value: {{ $apiProfile }}
{{- with .Values.extraEnv }}
{{ toYaml . | indent 8 }}
{{- end }}
        - name: AES_SECRET_KEYS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.aesSecretKeysName }}
              key: AESsecretKeys
        {{- with .Values.secrets.oauthAppEnv }}
        {{- range . }}
        - name: {{ .name }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.secrets.oauthAppsSecretName | required "secrets.oauthAppsSecretName is required" }}
              key: {{ .key }}
        {{- end }}
        {{- end }}
        {{- if .Values.qTestManager.logging.overrideEnabled }}
        - name: logback.configurationFile.additional
          value: "{{ .Values.qTestManager.logging.configMountPath }}/{{ .Values.qTestManager.logging.configFile }}"
        {{- end }}
        volumeMounts:
        {{- if .Values.qTestManager.logging.overrideEnabled }}
        - name: qtest-manager-logging-configuration-volume
          mountPath: {{ .Values.qTestManager.logging.configMountPath }}
        {{- end }}
        - name: qtest-data
          mountPath: {{ .Values.qTestManager.data.volumeMount }}
        - name: qtest-manager-secret-storage
          mountPath: {{ .Values.qTestManager.secret.volumeMount }}
          readOnly: true
        {{- if .Values.qTestManager.client.jdbc.sslEnable }}
        - name: qtest-manager-secret-root-volume
          mountPath: {{ .Values.qTestManager.client.jdbc.sslMountPath }}
          readOnly: true
        {{- end }}
        {{- if .Values.qTestManager.l2c.enabled }}
        - name: qtest-manager-secret-l2c-volume
          mountPath: {{ .Values.qTestManager.l2c.mountPath }}
          readOnly: true
        {{- end }}
        {{- if .Values.qTestManager.serverAppSSLRequired }}
        - name: qtest-manager-secret-ssl-volume
          mountPath: {{ .Values.qTestManager.server.sslMountPath }}
          readOnly: true
        {{- end }}
{{- with .Values.extraVolumeMounts }}
{{ toYaml . | indent 8 }}
{{- end }}
      {{- if .Values.extraContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      {{- if eq "string" (printf "%T" .Values.extraContainers) }}
{{ tpl .Values.extraContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.extraContainers | indent 6 }}
      {{- end }}
      {{- end }}
      volumes:
      - name: qtest-manager-secret-storage
        secret:
      {{ if .Values.secrets.existingConfigs }}
          secretName: {{ .Values.secrets.existingConfigs }}
      {{ else }}
          secretName: qtest-manager-secret
      {{- end }}
      {{- if .Values.qTestManager.client.jdbc.sslEnable }}
      - name: qtest-manager-secret-root-volume
        secret:
          secretName: qtest-db-root-secret
      {{- end }}
      {{- if .Values.qTestManager.l2c.enabled }}
      - name: qtest-manager-secret-l2c-volume
        secret:
          secretName: qtest-l2c-secret
      {{- end }}
      {{- if .Values.qTestManager.serverAppSSLRequired }}
      - name: qtest-manager-secret-ssl-volume
        secret:
          secretName: qtest-ssl-root-secret
      {{- end }}
      {{- if .Values.qTestManager.logging.overrideEnabled }}
      - name: qtest-manager-logging-configuration-volume
        configMap:
          name: qtest-manager-logging-config
      {{- end }}
      - name: qtest-data
      {{- if .Values.persistence.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
      {{- else if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "qtest-mgr.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- with .Values.extraVolumes }}
{{ toYaml . | indent 6 }}
{{- end }}
{{- end }}
