# Default values for qtest-insights-chart
namespace:
  name: qtest
reloader:
  enabled: false
secrets:
  name: qtest-manager-secret
  sessionsName: qtest-manager-secret
image:
  repository: qasymphony/insights
  pullPolicy: IfNotPresent
  tag: "2025.2.0"
imageCredentials:
  enabled: false
  # name: ""
  # registry: ""
  # username: ""
  # password: ""
  # email: ""
  # existingImageCredentials: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # A service account will be created for you if set to true. Set to false if you want to use your own.
  name: "qtest-insights-sa"
deployment:
  annotations: {}
  singlePodPerNode: false
podAnnotations: {}
rollouts:
  enabled: false
  ingressClassName: alb
  strategy:
    canary:
      maxSurge: "25%"
      maxUnavailable: 0
  steps:
    - setWeight: 20
    # if prometheus metrics are enabled
    # - analysis:
    #     templates:
    #     - templateName: success-rates
    #       clusterScope: true
    #     args:
    #     - name: service-name
    - setWeight: 50
    - pause: {duration: 10s}
extraInitContainers: []
extraContainers: []
extraArgs: []
extraEnv: []
extraVolumeMounts:
  - mountPath: /usr/local/tomcat/webapps/ROOT/ErrorLog/
    name: qtest-insights-ephemeral
    subPath: ErrorLog
  - mountPath: /usr/local/tomcat/webapps/ROOT/SavedDashboards/
    name: qtest-insights
    subPath: data/dashboards
  - mountPath: /usr/local/tomcat/webapps/ROOT/SavedBookmarks/
    name: qtest-insights
    subPath: data/bookmarks
  - mountPath: /usr/local/tomcat/webapps/ROOT/CustomReports/
    name: qtest-insights
    subPath: data/custom-reports
  - mountPath: /usr/local/tomcat/webapps/ROOT/rdDataCache
    name: qtest-insights-ephemeral
    subPath: cache
  - mountPath: /usr/local/tomcat/webapps/ROOT/rdDownload
    name: qtest-insights-ephemeral
    subPath: download
extraVolumes: []
service:
  type: LoadBalancer
  annotations: {}
  port: 8080
  targetPort: 8080
  targetHttpsPort: 8443
  serviceName: insights-service
securityContext:
  runAsUser: 8877
  runAsNonRoot: true
  fsGroup: 8877
qTestInsights:
  qTestInsightsCatalinaOpts: "-server -Xms512m -Xmx2048m -XX:CompileThreshold=8000 -XX:-DisableExplicitGC -Djava.awt.headless=true -XX:HeapDumpPath=/logs"
  qTestInsightsDBName: qtest
  qTestInsightsDBUser: postgres
  qTestInsightsDBHost: postgres.local
  qTestInsightsDBSchema: public
  qTestInsightsDBPort: 5432
  qTestInsightsWriteQTestDBName: qtest
  qTestInsightsWriteQTestDBUser: postgres
  qTestInsightsWriteQTestDBHost: postgres.local
  qTestInsightsWriteQTestDBSchema: public
  qTestInsightsWriteQTestDBPort: 5432
  qTestInsightsSessionDBName: sessions
  qTestInsightsSessionDBUser: postgres
  qTestInsightsSessionDBHost: postgres.local
  qTestInsightsSessionDBSchema: public
  qTestInsightsSessionDBPort: 5432
  qTestInsightsCSRFAllowPattern: \"$insights_security_csrf_trusted_source_pattern\"
  serverAppSSLRequired: false
  # Array of cipher suites for SSL/TLS connection in OpenSSL format (e.g. ["TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256"])
  qTestInsightsSSLCipherSuites: []
  server:
    sslMountPath: "/mnt/secrets/tls"
  smtp:
    server: "smtp.local"
    account: "qtest"
#### Ingress/IngressClass (> K8s 1.24-1.30+) #####
ingressClass:
  enabled: false
  labels: {}
  controller: ingress.k8s.aws/alb
  isDefaultClass: true
  # Use to force a networking.k8s.io API Version for certain CI/CD applications. Ex. "v1"
  fallbackApiVersion: ""
ingress:
  enabled: false
  name: qtest-insights-ingress
  labels: {}
  annotations: {}
  canary:
    annotationPrefix: ""
    annotations: {}
    # canary-by-header: []
    # canary-by-header-pattern: []
  hosts:
    - host: insights.qtest.local
  paths: []
  extraPaths:
    - path: /*
      backendServiceName: insights-service
      pathType: ImplementationSpecific
      backendPort: 8080
  tls: []
  # - secretName: qtest-svc-tls
  #   hosts:
  #     - svc.qtest.com
  https: false
persistence:
  enabled: false
  ## Set annotations on k8s pvc
  annotations: {}
  ## Specify an existing volume claim instead of creating a new one.
  ## When using this option all following options like storageClass, accessMode and size are ignored.
  ## existingClaim:

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass:
  accessMode: ReadWriteOnce
  size: 5Gi
  ## Specify extra volumes. Refer to ".spec.volumes" specification : https://kubernetes.io/fr/docs/concepts/storage/volumes/
  volumes: []
  ## Specify extra mounts. Refer to ".spec.containers.volumeMounts" specification : https://kubernetes.io/fr/docs/concepts/storage/volumes/
  mounts: []
  # VPA values
vpaAutoscaling:
  enabled: false
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
      - containerName: '*'
        controlledValues: RequestsAndLimits
# HPA values
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 1
  livenessProbe:
    httpGet:
      path: /rdLogon.aspx
      scheme: HTTP
      port: 8080
    initialDelaySeconds: 70
    periodSeconds: 30
  livenessSslProbe:
    httpGet:
      path: /rdLogon.aspx
      scheme: HTTPS
      port: 8443
    initialDelaySeconds: 70
    periodSeconds: 30
  readinessProbe:
    httpGet:
      path: /rdLogon.aspx
      scheme: HTTP
      port: 8080
    initialDelaySeconds: 70
    periodSeconds: 30
  readinessSslProbe:
    httpGet:
      path: /rdLogon.aspx
      scheme: HTTPS
      port: 8443
    initialDelaySeconds: 70
    periodSeconds: 30
  startupProbe:
    httpGet:
      path: /rdLogon.aspx
      scheme: HTTP
      port: 8080
    initialDelaySeconds: 70
    periodSeconds: 30
    failureThreshold: 20
  startupSslProbe:
    httpGet:
      path: /rdLogon.aspx
      scheme: HTTPS
      port: 8443
    initialDelaySeconds: 70
    periodSeconds: 30
    failureThreshold: 20
  targetCPUUtilizationPercentage: 85
  targetMemoryUtilizationPercentage: 85
resources:
  requests:
    cpu: 1
    memory: 2Gi
  limits:
    cpu: 1
    memory: 2Gi
limitRange:
  enabled: false
resourceQuota:
  enabled: false
nodeSelector: {}
tolerations: []
affinity: {}
topologySpreadConstraints: {}
